#!/bin/bash
# Usage:
#
plugin="unraid-file-caching"
tmp="/tmp/${plugin}"
disks_file="${tmp}/${plugin}.disks"
CONFIG="/boot/config/plugins/${plugin}/${plugin}.cfg"
source $CONFIG

# Create list of disks to include in the inotify.
rm -f "$disks_file" 2>/dev/null
mkdir -p $tmp
drives="/mnt/disk[^s]*"
disks=($drives)
for i in "${disks[@]}"
do
	echo $i >> "$disks_file"
done

if [ "$INCLUDE_UD" = "yes" ]; then
	if [ -d "/mnt/disks" ]; then
		echo "/mnt/disks" >> "$disks_file"
	fi
fi

if [ "$INCLUDE_CACHE" = "yes" ]; then
	if [ -d "/mnt/cache" ];then
		echo "/mnt/cache" >> "$disks_file"
	fi
fi
open_isdir="OPEN,ISDIR"

# Create pid to show file activity is running.
echo $$ > /var/run/${plugin}.pid

# Monitor disks, UD disks, and cache disk.
inotifywait -mrqs -e open,attrib,move --excludei 'appdata/' --timefmt '%b %d %H:%M:%S' --format '%T %e => %w%f' --fromfile "$disks_file" | while read line
do
	if [ "${line/$open_isdir}" = "$line" ]; then
		# Add line to log
		echo $line >> /var/log/${plugin}.log

		# Trim log file if it is over 20000 lines
		sed -i '20001,$ d' /var/log/${plugin}.log
	fi
done

# Remove pid file to show file activity is not running.
rm -f /var/run/${plugin}.pid
